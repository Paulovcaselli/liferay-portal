@component-name = "portal-solutions"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Digital Signature";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginUI();

		ApplicationsMenu.gotoPortlet(
			category = "Configuration",
			panel = "Control Panel",
			portlet = "Instance Settings");

		SystemSettings.gotoConfiguration(
			configurationCategory = "category.digital-signature",
			configurationName = "Digital Signature Configuration",
			configurationScope = "Virtual Instance Scope");

		FormFields.enableCheckbox(fieldName = "enabled");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			User.logoutPG();
		}
	}

	@priority = "5"
	test DigitalSignatureCanBeEnabled {
		DigitalSignature.enableDigitalSignature();

		Navigator.openURL();

        ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		var dsStatus = "Sent";

        AssertElementPresent(
			locator1 = "DigitalSignature#DIGITAL_SIGNATURE_STATUS",
			dsStatus = "${dsStatus}");
		
	}

	@priority = "3"
	test HaveMoreRecipientsThanOne {
		DigitalSignature.enableDigitalSignature();

		Navigator.openURL();

        ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		AssertElementPresent(locator1 = "DigitalSignature#DIGITAL_SIGNATURE_RECIPIENTS_BADGE");

	}

	@priority = "3"
	test CanNavigateBetweenPages {
		DigitalSignature.enableDigitalSignature();

		Navigator.openURL();

        ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		AssertElementPresent(locator1 = "DigitalSignature#DIGITAL_SIGNATURE_NAVIGATE_NEXT");
	}

	@priority = "4"
	test CanViewEnvelopeDetails {
		DigitalSignature.enableDigitalSignature();

		Navigator.openURL();

        ProductMenu.gotoPortlet(
			category = "Content & Data",
			portlet = "Digital Signature");

		var envelopeName = "Test";

		Click(
			envelopeName = "${envelopeName}",
			locator1 = "DigitalSignature#DIGITAL_SIGNATURE_ENVELOPE_NAME");

		AssertElementPresent(locator1 = "DigitalSignature#DIGITAL_SIGNATURE_ENVELOPE_ID");
	}

}