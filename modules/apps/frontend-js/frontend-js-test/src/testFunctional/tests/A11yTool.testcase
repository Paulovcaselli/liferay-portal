@component-name = "portal-frontend-infrastructure"
definition {

	property osgi.modules.includes = "frontend-js-a11y-sample-web,frontend-js-a11y-web";
	property portal.release = "false";
	property portal.upstream = "quarantine";
	property testray.component.names = "A11y Tool";
	property testray.main.component.name = "User Interface";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "A11y Test Page");

		JSONLayout.addWidgetToPublicLayout(
			groupName = "Guest",
			layoutName = "A11y Test Page",
			widgetName = "JS A11y Sample Web");

		JSONLayout.updateLayoutTemplateOfPublicLayout(
			groupName = "Guest",
			layoutName = "A11y Test Page",
			layoutTemplate = "1 Column");

		JSONLayout.addPublicLayout(
			groupName = "Guest",
			layoutName = "Blank Test Page");

		Navigator.gotoPage(pageName = "A11y Test Page");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "A11y Test Page");

			JSONLayout.deletePublicLayout(
				groupName = "Guest",
				layoutName = "Blank Test Page");
		}
	}

	@description = "LPS-142107. Verifies a11y tool can be disabled."
	@priority = "5"
	test CanBeDisabledWithDevelopment {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		task ("Modify the config file to be set to false") {
			OSGiConfig.deployOSGiConfigFile(
				OSGiConfigFileName = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config",
				OSGiConfigs = "enable=B&quot;false&quot;");
		}

		task ("Restart portal") {
			Portlet.shutdownServer();

			Portlet.startServer(deleteLiferayHome = "false");
		}

		task ("Assert the side panel is not present on the page") {
			Navigator.gotoPage(pageName = "A11y Test Page");

			AssertElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER");
		}

		takeScreenshot();
	}

	@description = "LPS-140736. Ensures there is no accessibility side panel on a page with no violations."
	@priority = "5"
	test CanDetectNoViolations {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		Navigator.gotoPage(pageName = "Blank Test Page");

		// Workaround for side panel sometimes displaying previous violations inccorectly LPS-138624

		if (IsElementPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		if (IsElementPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			AssertElementPresent(locator1 = "A11yTool#VIOLATION_PANEL_NO_VIOLATIONS");
		}

		AssertElementNotPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT");

		AssertElementNotPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_ICON");

		takeScreenshot();
	}

	@description = "Verifies a11y tool can be deployed and detect an a11y violation"
	@priority = "5"
	test CanDetectViolation {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		AssertElementPresent(
			key_text = "",
			locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_ITEM");

		AssertElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT");

		AssertElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_ICON");

		takeScreenshot();
	}

	@description = "LPS-142323. Verifies the side panel shows the violation occurrence when clicked from pop up."
	@priority = "4"
	test CanDisplayViolationDetailsInSidePanel {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		task ("Verifies there are violations on the page") {
			VerifyElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT");

			VerifyElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_ICON");
		}

		task ("Click on the icon next to the highlighted violation") {
			Click(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_ICON");
		}

		task ("Click on the listed rule violation from the pop up") {
			Click(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_POPOVER_ITEM");
		}

		task ("Assert the side panel displays the violation occurrence") {
			AssertElementPresent(
				key_text = "Occurrence 1",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_TITLE");
		}

		takeScreenshot();
	}

	@description = "LPS-142322. Verifies side panel displays information about a violation rule."
	@priority = "4"
	test CanDisplayViolationRuleDetails {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		task ("Verify and click on a rule listed on the side panel") {
			VerifyElementPresent(
				key_text = "button-name",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_ITEM");

			Click(
				key_text = "button-name",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_ITEM");
		}

		task ("Assert the side panel contains info about rule name, impact level, and link to category rule") {
			AssertElementPresent(
				key_text = "button-name",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_TITLE");

			AssertElementPresent(
				key_impact = "critical",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_IMPACT");

			AssertElementPresent(
				key_text = "More Info",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_LINK");
		}

		task ("Assert the side panel displays details about the rule violation") {
			AssertElementPresent(
				key_header = "Details",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_HEADER");

			AssertElementPresent(
				key_text = "Ensures buttons have discernible text",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_BODY");
		}

		task ("Assert the side panel lists the occurences") {
			AssertElementPresent(
				key_header = "Occurrences",
				locator1 = "A11yTool#VIOLATION_PANEL_COMPONENT_HEADER");

			AssertElementPresent(
				key_text = "",
				locator1 = "A11yTool#VIOLATION_PANEL_OCCURRENCE_LIST_ITEM");
		}

		takeScreenshot();
	}

	@description = "LPS-141820. Verifies violations can be filtered by 'Critical' only."
	@priority = "5"
	test CanFilterViolationsByCriticalImpactOnly {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		task ("Verify page has Minor, Moderate, Serious, and Critical set of violations") {
			VerifyElementPresent(
				key_impact = "minor",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");

			VerifyElementPresent(
				key_impact = "moderate",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");

			VerifyElementPresent(
				key_impact = "serious",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");

			VerifyElementPresent(
				key_impact = "critical",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");
		}

		task ("Filter impact by Critical") {
			A11yTool.setFilter(filterType = "Critical");
		}

		task ("Assert only critical violations are present on the side panel") {
			AssertElementPresent(
				key_impact = "critical",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");

			AssertElementNotPresent(
				key_impact = "minor",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");

			AssertElementNotPresent(
				key_impact = "moderate",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");

			AssertElementNotPresent(
				key_impact = "serious",
				locator1 = "A11yTool#VIOLATION_PANEL_ITEM_IMPACT");
		}

		task ("Assert only critical elements are highlighted") {
			AssertClick(
				key_index = "1",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_INDEX",
				value1 = "");

			AssertClick(
				key_index = "2",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_INDEX",
				value1 = "");

			AssertElementNotPresent(
				key_index = "3",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_INDEX");

			AssertElementPresent(
				key_impact = "critical",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_POPOVER_IMPACT");

			AssertElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_ICON");
		}

		task ("Assert minor, moderate, serious violations are not highlighted") {
			AssertElementNotPresent(
				key_impact = "minor",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_POPOVER_IMPACT");

			AssertElementNotPresent(
				key_impact = "moderate",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_POPOVER_IMPACT");

			AssertElementNotPresent(
				key_impact = "serious",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_POPOVER_IMPACT");
		}

		takeScreenshot();
	}

	@description = "LPS-141734. Verifies impact and category filters are available."
	@priority = "5"
	test CanFilterViolationsByImpactAndCategory {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		Click(locator1 = "A11yTool#FILTER_ELEMENT_ICON");

		AssertElementPresent(locator1 = "A11yTool#FILTER_BY_IMPACT_HEADER");

		AssertElementPresent(locator1 = "A11yTool#FILTER_BY_CATEGORY_HEADER");

		AssertElementPresent(
			key_text = "",
			locator1 = "A11yTool#FILTER_LIST_ITEM");

		takeScreenshot();
	}

	@description = "LPS-142318. Verifies multiple violations are highlighted with an icon."
	@priority = "4"
	test CanHighlightMultipleViolations {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		task ("Verify there are 3 different a11y violations") {
			VerifyElementPresent(
				key_index = "1",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_INDEX");

			VerifyElementPresent(
				key_index = "2",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_INDEX");

			VerifyElementPresent(
				key_index = "3",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_INDEX");
		}

		task ("Assert all 3 violations are highlighted") {
			AssertElementPresent(
				key_index = "1",
				key_text = "a11y-backdrop",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_OVERLAY");

			AssertElementPresent(
				key_index = "2",
				key_text = "a11y-backdrop",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_OVERLAY");

			AssertElementPresent(
				key_index = "3",
				key_text = "a11y-backdrop",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_OVERLAY");
		}

		task ("Assert all 3 violations have an icon") {
			AssertElementPresent(
				key_index = "1",
				key_text = "a11y-indicator",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_OVERLAY");

			AssertElementPresent(
				key_index = "2",
				key_text = "a11y-indicator",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_OVERLAY");

			AssertElementPresent(
				key_index = "3",
				key_text = "a11y-indicator",
				locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_OVERLAY");
		}

		takeScreenshot();
	}

	@description = "LPS-142271. Verifies violations are sorted by descending impact."
	@priority = "4"
	test OrdersViolationsByDescendingImpact {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		task ("Verifies the panel is in top-level view") {
			VerifyElementPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER");

			VerifyElementPresent(
				key_text = "",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_ITEM");
		}

		task ("Verfies there are violations on the page") {
			VerifyElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT");

			VerifyElementPresent(locator1 = "A11yTool#HIGHLIGHTED_ELEMENT_ICON");
		}

		task ("Asserts the list of rules are sorted in descending impact") {
			AssertElementPresent(
				key_impact = "critical",
				key_index = "1",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_INDEX");

			AssertElementPresent(
				key_impact = "serious",
				key_index = "2",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_INDEX");

			AssertElementPresent(
				key_impact = "moderate",
				key_index = "3",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_INDEX");

			AssertElementPresent(
				key_impact = "minor",
				key_index = "4",
				locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_INDEX");
		}

		takeScreenshot();
	}

	@description = "LPS-141455. Verifies the side panel appears with violation(s)."
	@priority = "5"
	test ShowsSidePanelWithViolation {
		property osgi.module.configuration.file.names = "com.liferay.frontend.js.a11y.web.internal.configuration.FFA11yConfiguration.config";
		property osgi.module.configurations = "enable=B&quot;true&quot;";

		// Workaround for side panel sometimes not displaying LPS-141442

		while (IsElementNotPresent(locator1 = "A11yTool#VIOLATION_PANEL_HEADER")) {
			Refresh();
		}

		AssertElementPresent(
			key_text = "",
			locator1 = "A11yTool#VIOLATION_PANEL_RULE_LIST_ITEM");

		takeScreenshot();
	}

}