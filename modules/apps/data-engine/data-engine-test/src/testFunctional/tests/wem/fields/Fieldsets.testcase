@component-name = "portal-wcm"
definition {

	property portal.release = "true";
	property portal.upstream = "true";
	property testray.main.component.name = "Web Content Administration";

	setUp {
		TestCase.setUpPortalInstance();

		User.firstLoginPG();

		JSONGroup.addGroup(groupName = "Test Site Name");
	}

	tearDown {
		var testPortalInstance = PropsUtil.get("test.portal.instance");

		if ("${testPortalInstance}" == "true") {
			PortalInstances.tearDownCP();
		}
		else {
			JSONGroup.deleteGroupByName(groupName = "Test Site Name");
		}
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test AddFieldsetOnBuilderWithSameFieldType {
		property portal.acceptance = "false";

		// TODO LPS-107630 AddFieldsetOnBuilderWithSameFieldType pending implementation

	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test AddFieldsetOnOtherFieldsetAlreadyOnBuilder {
		property portal.acceptance = "false";

		// TODO LPS-107630 AddFieldsetOnOtherFieldsetAlreadyOnBuilder pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "5"
	test DuplicateFieldset {
		property portal.acceptance = "false";

		// TODO LPS-107630 DuplicateFieldset pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test EditFieldsetPropertiesFromSideBar {
		property portal.acceptance = "false";

		var key_fieldLabel = "NewDate";

		ProductMenu.gotoPortlet(
			category = "Content & Data",
			panel = "Site Administration",
			portlet = "Web Content");

		NavItem.gotoStructures();

		WebContentStructures.addCP(
			structureDescription = "EditFieldSetTest",
			structureName = "EditFieldSetTest");

		Navigator.gotoSidebarTab(tabName = "Builder");

		Navigator.gotoNavTab(navTab = "Fieldsets");

		Click(locator1 = "FormViewBuilder#CREATE_NEW_FIELD_SETS");

		DoubleClick(locator1 = "Modal#CREATE_DATE_FIELD");

		Type(
			locator1 = "FormViewBuilder#FIELD_SET_NAME",
			value1 = "EditFieldSetTest");

		Click(locator1 = "Modal#SAVE_BUTTON");

		DataEngine.addFieldsets(
			fieldsetsLabel = "EditFieldSetTest",
			fieldsetsName = "EditFieldSetTest");

		WebContentStructures.saveCP(structureName = "EditFieldSetTest");

		WebContentStructures.editStructureCP(structureName = "EditFieldSetTest");

		Navigator.gotoNavTab(navTab = "Fieldsets");

		Click(locator1 = "AppBuilder#BUTTON_EDIT_FIELDSET");

		Click(
			key_selectAction = "Edit",
			locator1 = "FormViewBuilder#FIELD_ELLIPSIS_ACTION");

		Click(locator1 = "Modal#CLICK_DATE_FIELD");

		Type(
			key_fieldLabel = "Label",
			locator1 = "TextInput#GENERIC_TEXT_INPUT",
			value1 = "NewDate");

		Click(locator1 = "Modal#SAVE_BUTTON");

		Click(locator1 = "Modal#PROPAGATE_BUTTON");

		AssertTextEquals(
			locator1 = "FormViewBuilder#ASSERT_FIELD_SET_NAME",
			value1 = "NewDate");

		WebContentStructures.saveCP(structureName = "EditFieldSetTest");

		WebContentStructures.editStructureCP(structureName = "EditFieldSetTest");

		AssertTextEquals(
			locator1 = "FormViewBuilder#ASSERT_FIELD_SET_NAME",
			value1 = "NewDate");
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "5"
	test FieldsetNameRenamedWhenNameAlreadyExistent {
		property portal.acceptance = "false";

		// TODO LPS-107630 FieldsetNameRenamedWhenNameAlreadyExistent pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test FieldsetSetAsCollapsible {
		property portal.acceptance = "false";

		// TODO LPS-107630 FieldsetSetAsCollapsible pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test FieldsetSetAsRepeatable {
		property portal.acceptance = "false";

		// TODO LPS-107630 FieldsetSetAsCollapsible pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test RepeatFieldsetWithoutDuplicatingContent {
		property portal.acceptance = "false";

		// TODO LPS-107630 RepeatFieldsetWithoutDuplicatingContent pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test SaveStructureAddingBackFieldset {
		property portal.acceptance = "false";

		// TODO LPS-107630 SaveStructureAddingBackFieldset pending implementation
	}

	@description = "This is a test for LPS-107630. As an App Adm, I want to use an existing fieldset"
	@ignore = "true"
	@priority = "4"
	test ShowAndHideFieldsetLabel {
		property portal.acceptance = "false";

		// TODO LPS-107630 ShowAndHideFieldsetLabel pending implementation
	}

}